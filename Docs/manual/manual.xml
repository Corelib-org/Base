<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook V5.0//EN" "http://www.oasis-open.org/docbook/xml/5.0/docbook.dtd">
<book xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink">
	<title>Corelib documentation/Manual Outline</title>
	<xi:include href="info.xml"/>
	<toc>
		<title>Table of contents</title>
	</toc>
	<preface>
		<title>Preface</title>
		<section>
			<title>Who should read this</title>
			<para>
				Developers who wish to developer applications using the corelib framework
			</para>
		</section>
		<section>
			<title>Conventions</title>
			<para>
				Code examples:
			</para>
			<para>
				<programlisting language="php">
					<![CDATA[
define('CORELIB_MANAGER_PASSWORD', 'YOURPASSWORD'); ]]>
				</programlisting>
			</para>			
		</section>
		<xi:include href="coding-standards/coding-standards.xml"/>
	</preface>
	<xi:include href="getting-started/getting-started.xml"/>

	<chapter>
		<title>Installation and configuration</title>
		<section>
			<title>Requirements</title>
			<itemizedlist>
				<listitem>
					<para><glossterm linkend="php">PHP</glossterm> 5.x - and the following extensions installed</para>
					<itemizedlist>
						<listitem>XSL</listitem>
						<listitem>PCRE</listitem>
					</itemizedlist>
					<para>Optional <glossterm linkend="php">PHP</glossterm> extensions</para>
					<itemizedlist>
						<listitem>OpenSSL</listitem>
						<listitem>MySQLi</listitem>
						<listitem>Session</listitem>
					</itemizedlist>
				</listitem>
			</itemizedlist>
		</section>
		<section>
			<title>Getting corelib</title>
			<para>
				You can download the most recent version of corelib by going to our 
				webpage and access our dowload section 
				<link xlink:href="http://www.corelib.org/download/">http://www.corelib.org/download/</link>.
			</para>
		</section>
		<section>
			<title>Starting your first project</title>
		</section>
		<section>
			<title>Hierachy</title>
			<section>
				<title>Dummy WWW Direcotry Hierachy</title>
				<table>
					<caption>Dummy webroot directory hierachy</caption>
					<thead>
						<tr>
							<th>Folder</th>
							<th>Description</th>
						</tr>
					</thead>
					<tbody>
						<tr><td>/</td><td>root directory of the directory hierachy</td></tr>
						<tr><td>/bin/</td><td>user utilities fundamental to both single-user and multi-user environments</td></tr>
						<tr><td>/etc/</td><td>system configuration files and scripts</td></tr>
						<tr><td>/etc/dist/</td><td>Default Configuration Files</td></tr>
						<tr><td>/lib/</td><td>critical system libraries</td></tr>
						<tr><td>/lib/class/</td><td>Class Libraries</td></tr>
						<tr><td>/lib/class/dao/</td><td>Data Access Objects</td></tr>
						<tr><td>/lib/http/</td><td>Normal HTTP Related Requests (WebDummy)</td></tr>
						<tr><td>/lib/http/get/</td><td>HTTP Get Method related files (WebDummy)</td></tr>
						<tr><td>/lib/http/post/</td><td>HTTP Post Method related files (WebDummy)</td></tr>
						<tr><td>/lib/http/rpc/</td><td>Remote Procedure Calls (WebDummy)</td></tr>
						<tr><td>/share/</td><td>Various Indepedent files, like javascript, xml etc.</td></tr>
						<tr><td>/share/doc/</td><td>Site Documentation</td></tr>
						<tr><td>/share/lang/</td><td>Language Files (WebDummy)</td></tr>
						<tr><td>/share/xsl/</td><td>XSLT Stylesheets (WebDummy)</td></tr>
						<tr><td>/share/web/</td><td>Web related Documents (WebDummy)</td></tr>
						<tr><td>/share/web/style/</td><td>CSS Files (WebDummy)</td></tr>
						<tr><td>/share/web/javascript/</td><td>JavaScript Files (WebDummy)</td></tr>
						<tr><td>/share/web/flash/</td><td>Macromedia Flash Files (WebDummy)</td></tr>
						<tr><td>/share/web/images/</td><td>Various Image Files (WebDummy)</td></tr>
						<tr><td>/var/</td><td>multi-purpose logs, databases etc.</td></tr>
						<tr><td>/var/db/</td><td>miscellaneous automatically generated system-specific database files </td></tr>
						<tr><td>/var/log/</td><td>miscellaneous system log files</td></tr>
						<tr><td>/var/cache/</td><td>miscellaneous cached files</td></tr>
						<tr><td>/tmp/</td><td>temporary files that are not guaranteed to persist</td></tr>
					</tbody>
				</table>
			</section>			
		</section>
	</chapter>
	
	<chapter>
		<title>Features</title>
		<section>
			<title>Database abstraction layer</title>
			<para>
				Active record pattern
					Data access layer return the Data access object
			</para>
		</section>
		<section>
			<title>PageFactory template engine</title>
		</section>
		<section>
			<title>Code generator</title>
		</section>
		<section>
			<title>Webbased configuration and administration interface</title>
			<para>
				Corelib comes with a standard configuration utlility which, once enabled,
				can be accessed on the url <code>${BASE_URL}/corelib/</code>
			</para>
			<section>
				<title>How to enable the webbased configuration and administration interface.</title>
				<para>
					In order to enable the webbased configuration and administration interface at least one
					constant in your configuration file <code>CORELIB_MANAGER_PASSWORD</code>.
					<programlisting language="php">
						<![CDATA[
define('CORELIB_MANAGER_PASSWORD', 'YOURPASSWORD'); ]]>
					</programlisting>
				</para>
				<para>
					Optional you can change the username as well using the constant named <code>CORELIB_MANAGER_USERNAME</code>
					<programlisting language="php">
						<![CDATA[
define('CORELIB_MANAGER_USERNAME', 'admin'); ]]>	
					</programlisting>
				</para>
			</section>
		</section>
		<section>
			<title>Online Extension library</title>
			<para>
				<emphasis>Not available for public download yet</emphasis>
			</para>
		</section>
	</chapter>
	
	<chapter>
		<title>Tutorials and howto's</title>
		<xi:include href="codegenerator/creating-modules.xml"/>
		<xi:include href="codegenerator/module-file.xml"/>
		<xi:include href="howto/setting-up-a-corelib-site.xml"/>
		<chapter>
			<title>Registering pages</title>
			<section>
				<title>Simple page looukup</title>
				<para>
					The simple way is a one url only, when corelib receives a new request it looks in the etc/get.php 
					file for an array key that exactly matches the requested url. If i then want to register the root 
					url / it would look like this.
				</para>
				<para>
					<programlisting language="php">
						<![CDATA[
// Simple
$pages['/'] = 'lib/http/get/corelib/about.php';
						]]>	
					</programlisting>
				</para>
			</section>
			<section>
				<title>Simple with custom method</title>
				<para>
					This is pretty much the same as the simple way above, however it allows you to use another method for 
					handling the request (This is explained below)
				</para>
				<para>
					<programlisting language="php">
						<![CDATA[
// Static
$pages['/manager/ajax/page/create/'] = array('page'=>'lib/ajax/get/manager/page.php',
                                             'exec'=>'create');
						]]>
					</programlisting>
				</para>
			</section>
			<section xml:id="advanced-page-lookup">
				<title>Advanced page lookup</title>
				<para>
					This method allows for registering dynamic urls, however this feature has a lower priority when resolving pages. 
					the way this is done is by adding a new $pages entry. This entry could look something like this:
				</para>
				<para>
					<programlisting language="php">
						<![CDATA[
// Dynamix regex
$pages[] = array('type'=>'regex',
                  'expr'=>'/^\/manager\/(test)\/([0-9]+)\/$/',
                  'exec'=>'\\1(\\2)',
                  'page'=>'lib/http/get/test.php');
                  		]]>
					</programlisting>				
				</para>
			</section>
			<section>
				<title>Meta type page lookup</title>
				<para>
					<programlisting language="php">
						<![CDATA[
// Dynamic Meta format
$pages[] = array('type'=>'PageFactoryMetaPageResolver',
                  'expr'=>'/manager/(function)/(int:id)/(string:somestring)/',
                  'exec'=>'id, somestring',
                  'page'=>'lib/http/get/test.php');

// Dynamic Meta format with a static function
$pages[] = array('type'=>'PageFactoryMetaPageResolver',
                  'expr'=>'/manager/(int:id)/(string:somestring)/',
                  'exec'=>'function: id, somestring',
                  'page'=>'lib/http/get/test.php');
                  		]]>
					</programlisting>
					<tip>
						<para>
							If you are familiar with regular expressions it is recommended to use
							the "<link linkend="advanced-page-lookup">Advanced lookup method</link>" instead, since it provides better performance.
						</para>
					</tip>
				</para>
			</section>
			<section>
				<title>Custom lookup engines</title>
			</section>
		</chapter>
		<section>
			<title>Using the SOAP services and XSLT</title>
		</section>
	</chapter>
	
	<reference>
		<title>FAQ</title>
	</reference>	
	
	
	
	<part>
		<title>Function reference</title>
		
		<chapter>
			<title>Corelib-Base</title>
			<chapter>
				<title>File system</title>
				<refentry>
					<refmeta>
						<refentrytitle>FileSystemTemplateEngine</refentrytitle>
						<manvolnum>3S</manvolnum>
					</refmeta>	
					<refnamediv>
						<refname>FileSystemTemplateEngine</refname>
						<refpurpose>Filesystem dummy template engine.</refpurpose>
					</refnamediv>
					<refsection>
						<title>Introduction</title>
						<para>A dummy template engine which does not implment any output, it simply serves as a loader before writing the actual file output to the client.</para>
					</refsection>					
					<refsynopsisdiv>
						<classsynopsis class="class" language="php">
							<ooclass>
								<classname>FileSystemTemplateEngine</classname>
							</ooclass>
							<ooclass>
								<classname>PageFactoryTemplateEngine</classname>
							</ooclass>
							<methodsynopsis>
								<modifier>public</modifier>
								<void/>	
								<methodname>draw</methodname>
							</methodsynopsis>
							<methodsynopsis>
								<modifier>public</modifier>
								<type>Output</type>
								<methodname>addPageSettings</methodname>
								<methodparam>
									<type>Output</type>
									<parameter>$content</parameter>
								</methodparam>						
							</methodsynopsis>
						</classsynopsis>
					</refsynopsisdiv>
				</refentry>
			</chapter>
		</chapter>
		
	</part>
	
		
	<glossary>
		<glossentry xml:id="php">
			<glossterm>PHP: Hypertext Preprocessor</glossterm>
			<acronym>PHP</acronym>
			<glossdef>
				<para><acronym>PHP</acronym> (recursive acronym for PHP: Hypertext Preprocessor) is a widely-used open source general-purpose scripting language that is especially suited for web development and can be embedded into <acronym>HTML</acronym>.</para>
			</glossdef>
		</glossentry>
		<glossentry xml:id="mva">
			<glossterm>Model-view-adapter</glossterm>
			<acronym>mva</acronym>
			<glossdef>
				<para><link xlink:href="http://en.wikipedia.org/wiki/Model-view-adapter">Model-view-adapter on wikipedia</link></para>
			</glossdef>
		</glossentry>
		<glossentry xml:id="mvc">
			<glossterm>Model-view-controller</glossterm>
			<acronym>mvc</acronym>
			<glossdef>
				<para><link xlink:href="http://en.wikipedia.org/wiki/Model-view-controller">Model-view-controller on wikipedia</link></para>
			</glossdef>
		</glossentry>
		<glossentry xml:id="arp">
			<glossterm>Active record pattern</glossterm>
			<acronym>arp</acronym>
			<glossdef>
				<para><link xlink:href="http://en.wikipedia.org/wiki/Active_record_pattern">Active record pattern on wikipedia</link></para>
			</glossdef>
		</glossentry>
		<glossentry xml:id="dal">
			<glossterm>Data access Layer</glossterm>
			<acronym>dal</acronym>
			<glossdef>
				<para><link xlink:href="http://en.wikipedia.org/wiki/Data_access_layer">Data access Layer on wikipedia</link></para>
			</glossdef>
		</glossentry>
		<glossentry xml:id="dao">
			<glossterm>Data access object</glossterm>
			<acronym>dao</acronym>
			<glossdef>
				<para><link xlink:href="http://en.wikipedia.org/wiki/Data_access_object">Data access objects on wikipedia</link></para>
			</glossdef>
		</glossentry>
		<glossentry xml:id="html">
			<glossterm>Hyper Text Markup Language</glossterm>
			<acronym>HTML</acronym>
			<glossdef>
				<para>Missing.</para>
			</glossdef>
		</glossentry>
		<glossentry xml:id="framework">
			<glossterm>Framework</glossterm>
			<glossdef>
				<para>Missing.</para>
			</glossdef>
		</glossentry>
	</glossary>
</book>