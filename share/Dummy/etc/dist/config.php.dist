<?php
/* vim: set tabstop=4 shiftwidth=4 softtabstop=4: */
/**
 * Corelib dummy website configuration file.
 *
 * In this file you can put all you configuration which is specific to the current
 * platform. if you want to declare more system wide configuration constants
 * you should use {@link abstract.php} instead.
 *
 * An example of configuration constants which should go in config.php could be
 * the database connection constants, because it usually changes with system.
 * And in {@link abstract.php} you can put the {@link SOFTWARE_VERSION}
 * configuration constants because it always stays the same no matter what system
 * you are running your corelib site on.
 *
 * This script is part of the corelib project. The corelib project is
 * free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * The GNU General Public License can be found at
 * http://www.gnu.org/copyleft/gpl.html.
 * A copy is found in the textfile GPL.txt and important notices to the license
 * from the author is found in LICENSE.txt distributed with these scripts.
 *
 * This script is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * This copyright notice MUST APPEAR in all copies of the script!
 *
 * @author Steffen Soerensen <ss@corelib.org>
 * @copyright Copyright (c) 2005-2010 Steffen Soerensen
 * @license http://www.gnu.org/copyleft/gpl.html
 * @package Dummy
 * @subpackage Website
 * @link http://www.corelib.org/
 * @version 1.0.0 ($Id$)
 * @filesource
 */


if(!defined('CORELIB')){
	/**
	 * Define path to corelib.
	 *
	 * This configuration constants defines the location of corelib.
	 *
	 * @var string path to corelib directory
	 */
	define('CORELIB', '../corelib/');
}

/**
 * Load corelib base class.
 *
 * This include is required at this point, because including this files
 * declares some basic constants, and loads the class autoloader.
 *
 * @ignore
 */
require_once(CORELIB.'/Base/Base.php');	// DO NOT CHANGE OR REMOVE THIS LINE!

/**
 * Current Runlevel.
 *
 * Set the system runlevel. {@link BASE_RUNLEVEL_DEVEL} runlevel is the developer
 * runlevel, it enables error reporting and the developer toolbar. {@link BASE_RUNLEVEL_PROD}
 * will set the system in production mode, this means no error reporting and no developer
 * toolbar. it also turns of internal debugging features, giving better performance.
 *
 * @see BASE_RUNLEVEL_DEVEL
 * @see BASE_RUNLEVEL_PROD
 */
define('BASE_RUNLEVEL', BASE_RUNLEVEL_DEVEL);

/**
 * Define the base url.
 *
 * The base url should be defined in corelib has problems resolving base url
 * usually you should define this constant if the website runs in another folder
 * then the root of your domain, or the apache servername is something else then
 * your domain name.
 *
 * @var string url
 * @ignore
 */
// define('BASE_URL', 'http://path.to/site/');


/**
 * Enable user authorization in abstracts.php.
 *
 * This constant allows you to enable user authorization support.
 * enabling this setting loads the UserAuthorization class in abstracts.php
 *
 * @var boolean true or false.
 */
define('ABSTRACTS_ENABLE_AUTHORIZATION', false);

/**
 * Enable mysql database support in abstracts.php.
 *
 * This constant allows you to enable mysql database support.
 * enabling this setting loads the Database class in abstracts.php
 *
 * @var boolean true or false.
 */
define('ABSTRACTS_ENABLE_DATABASE', false);

	/**
	 * Mysql database hostname.
	 */
	define('DATABASE_MASTER_HOSTNAME', '');

	/**
	 * Mysql database username.
	 */
	define('DATABASE_MASTER_USERNAME', '');

	/**
	 * Mysql database password.
	 */
	define('DATABASE_MASTER_PASSWORD', '');

	/**
	 * Mysql database hostname.
	 */
	define('DATABASE_MASTER_DATABASE', '');
?>